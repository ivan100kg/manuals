--- ip ---------------------------------------------------------------------
Позволяет посмотреть сетевые интерфейсы и IP адреса им присвоенные,
посмотреть и настроить таблицу маршрутизации, включать или отключать сетевые
интерфейсы, управлять маршрутизацией и ARP.

Синтаксис:
ip [option] object [command] [params]

option:
    Опции это глобальные настройки, которые сказываются на работе всей
    утилиты независимо от других аргументов, их указывать необязательно.
    -v  -Version    - только вывод информации об утилите и ее версии.
    -h  -human      - выводить данные в удобном для человека виде.
    -s  -stats      - включает вывод статистической информации(-s -s -еще больше)
    -d  -details    - показывать ещё больше подробностей
    -f  -family     - позволяет указать протокол, с которым нужно работать, если
                    протокол не указан, то берется на основе параметров команды.
                    Опция должна принимать одно из значений: 
                        bridge, dnet, inet, inet6, ipx, link 
                    По умолчанию используется inet, link - отсутствие протокола.
    -o  -oneline    - выводить каждую запись с новой строки.
    -r  -resolve    - определять имена хостов с помощью DNS.
    -a  -all        - применить команду ко всем объектам.
    -c  -color      - цветной вывод, доступные значения: auto, always и never.
    -br -brief      - выводить только базовую информацию для удобства чтения.
    -4              - короткая запись для -f inet.
    -6              - короткая запись для -f inet -f inet6.
    -B              - короткая запись для -f inet -f bridge.
    -0              - короткая запись для -f inet -f link.
object:
    Объект - это тип данных, с которым надо будет работать, например: адреса,
    устройства, таблица arp, таблица маршрутизации и так далее.
    address     a   - сетевые адреса
    link        l   - физическое сетевое устройство
    neighbour   n   - просмотр и управление ARP
    route       r   - управление маршрутизацией
    rule        ru  - правила маршрутизации
    tunnel      t   - настройка туннелирования
command:
    Команды - какое-либо действие с объектом. Зависят от объекта к кторому прим.
    add
    change
    del
    delete
    flush
    get
    list
    show
    monitor
    replace
    restore
    save
    set
    update
    ls      - сокращенно для show dev
params:
    Параметры - параметры, для команд(напр для add -> 10.0.2.100/24 dev enp0s3)
    ip l show dev eno1 - dev eno1 параметры для команды show

# example
# address
ip a == ip address show             # посмотреть все IP связ со всеми интерфейсами
ip a show dev enp0s3                # посмотреть IP только для enp0s3 устр-ва
ip a add 10.0.2.100/24 dev enp0s3   # добавить IP адрес с маской в сокр виде
ip a del 10.0.2.100/24 dev enp0s3   # удалить IP адрес от интерфейса
ip a flush                          # удалить все адреса
ip a flush to 10.0.2.0/24           # удалить IP адреса подсети
ip addr add brd [ip_address] dev [interface]   # добавить широковещ адрес для инт-са

# interface
ip l == ip link show                # список сетевых интерфейсов
ip link ls up                       # список работающих интерфейсов
ip link show up                     # список работающих интерфейсов(так же)
ip link set dev enp0s3 down         # выключить интерфейс
ip link set dev enp0s3 up           # включить интерфейс
ip link set mtu 4000 dev enp0s3     # mtu - package size(1500 default)
ip link set dev enp0s3 address AA:BB:CC:DD:EE:FF
                                    # уст-ка MAC-адреса, перед этим откл инт-с
# arp
Состояние устройства может быть:
    REACHABLE - означает валидную, достижимую запись до истечения таймаута.
    PERMANENT - означает постоянную запись, которую может удалить только администратор
    STALE - означает действительную, но недоступную запись
    DELAY - означает, что ядро все еще ожидает проверки из устаревшей записи
ip n == ip neighbour show           # ARP table
ip neigh add 192.168.0.105 lladdr b0:be:76:43:21:41 dev enp0s3
                                    # добавить запись вручную(обычно авто)
ip n del dev enp0s3 192.168.0.105   # удалить запись из ARP таблицы
ip neigh flush dev enp0s3           # очистить все записи для опр инт-са
ip neigh flush                      # очистить всю таблицу

# route
ip r == ip route show               # таблица маршрутизации
ip route add 169.255.0.0 via 169.254.19.153
                                    # добавить маршрут для сети через тот же IP
ip r add 169.255.0.0 dev enp0s3     # указать сетевой инт-с через кот надо отпр
                                      пакеты для определенной сети
ip route del 169.255.0.0 via 169.254.19.153
                                    # удалить маршрут

--- ss -----------------------------------------------------------------------
Socket Statistic
Предоставляет подробную информацию об открытых портах и прослушиваемых сокетах

Отображаемая информация вывода:
Netid               - отображает типы сокетов
State               - отображает состояние сокета:
    ESTAB  - установлен
    UNCONN - не подключен
    LISTEN - прослушивается
Recv-Q              - количество принятых пакетов в очереди
Send-Q              - количество отправленных пакетов в очереди
Local address:port  - адрес локальной машины и порт
Peer address:port   - адрес удаленной машины и порт

Синтаксис
ss [options] [FILTER]
options:
    ss -h     # help
    ss        # ESTAB сокеты (TCP/UNIX/UDP, которые установили соединение)
    ss -a     # все открытые сокеты (TCP/UNIX/UDP), которые установили соединение
    ss -l     # список прослушиваемых сокетов LISTEN
    ss -t     # список всех TCP-соединений
    ss -u     # список всех UDP-соединений
    ss -w     # необработанные сокеты
    ss -x     # сокеты Unix
    ss -4     # список подключений к сокету IPv4 
    ss -6     # список подключений к сокету IPv6 
    ss -at4   # совмещение команд - все TCP-соединения IPv4
    ss -t -p  # процессы сокетов
filter:
    ss -t state listening # TCP-соединение в состоянии прослушивания
    ss -at | grep LISTEN  # TCP-соединение в состоянии прослушивания(с пом grep)
    ss -tr state established '( dport = :22 or sport = :22 )' # подключения к ssh


--- dig -----------------------------------------------------------------------
DNS (Domain Name System) — это система доменных имён, с помощью которой каждому 
имени домена сопоставляется его реальный IP адрес

Основные DNS записи для домена:
    имя         - хост, псевдоним (example.com)
    тип записи:
        А (address record): адрес домена в IPv4, осуществляет привязку домена к IP адресу
        АААА (address record): адрес домена в IPv6
        CNAME (canonical name record): позволяет создавать псевдонимы и субдомены после создания записи типа A
        MX (почтовый сервер): такой тип записи создает специальный поддомен для внутреннего почтового сервера
        NS (сервер имён): служит для определения доменов (или адресов) серверов DNS, которые обслуживают этот домен
        TXT: информационная запись в текстовом виде
        SOA (Start Of Authority): указывает на каком именно сервере хранится полная информация о домене
        PTR: осуществления связи IP-адреса сервера с каноническим именем этого же сервера
    значение    - IP адрес, назначение, ответ и т.д. (178.20.153.253)

Синтаксис команды dig
dig [опции] [@сервер] доменное_имя [тип_записи] [флаги]
опции           - доп фунцкионал:
    -4 - позволяет использовать только IPv4
    -6 - позволяет использовать только IPv6
    -x - предназначена для получения домена по IP
    -f - используется для чтения списка доменов из файла
    -r - предотвращает чтение настроек из файла ~/.digrc
    -t - позволяет указать тип записи, которую надо получить
    -p - позволяет указать номер порта DNS сервера
    -u - отображает время в секундах вместо миллисекунд
    -b IP-адрес - позволяет указать исходящий IP-адрес(в случае нескольких сетевых карт)
@cервер         - @ + IP-адрес или доменное имя DNS-сервера (если не указано - исп DNS-сервер по умолчанию)
доменное_имя    - доменное имя интернет-ресурса, о котором необходимо получить информацию(google.com)
тип_записи      - для какого типа записи необходим вывод A, NS, MX, TXT ... ANY
флаги           - дополнительные команды/фильтры:
    +[no]all        - отображает/скрывает все установленные по умолчанию секции, флаги отображения
    +[no]answer     - отображает только ответ на запрос
    +[no]fail       - должна ли утилита переключаться на следующий DNS сервер, если текущий не отвечает (по умолч +fail)
    +short          - сокращает вывод утилиты
    +[no]cmd        - отключает вывод заголовка и информации об использованных опциях утилиты
    +[no]identify   - используется вместе с флагом +short и отображает информацию об IP-адресе сервера
    +[no]comments   - удаляет все комментарии из вывода утилиты
    +[no]trace      - список DNS серверов через которые прошёл запрос на получ инфо о домене, по умолчанию отключено

Вывод команды, секции:
    HEADER              - версия утилиты, ID запроса, полученные ошибки и использованные флаги вывода
                          выводится и другая важная информация о количестве запросов, обращений к DNS-серверу...
    QUESTION SECTION    - текущий запрос
    ANSWER SECTION      - результат обработки созданного запроса (в данном случае это IP-адрес домена)

Примеры:
    dig naykalab.ru +noall +answer      - вывод только answer секции
    dig google.com MX +noall +answer    - вывод MX-записи домена google.com
    dig naykalab.ru ANY +noall +answer  - все записи
    dig @8.8.8.8 google.com             - использовать ДНС сервер 8.8.8.8
    dig -x 87.250.250.242 +short        - получить домен по ip


--- mtr ----------------------------------------------------------------------------------------------
Объединяя функции ping и traceroute, mtr позволяет постоянно опрашивать удаленный сервер и отслеживать 
изменения задержки и производительности с течением времени, используется протокол icmp

Синтаксис:
mtr [options] host/IP
options:
    -n      IP-адреса вместо имен хостов
    -b      IP-адрес+хост
    -c3     количество пингов, в данном случае 3
    -pc3    интерактивный отчет по каждому запросу(3 запроса)
    -rc3    отчет для файла для 3 пингов(можно менять)
    --tcp   использовать tcp вместо icmp
    --udp   использовать udp вместо icmp
    -m2     максимальное кол-во переходов между хостами
    -s1024  размер пакета
    -4      исп только адреса IPv4

Example:
    mtr -rbc10 naykalab.ru > ping.txt   # отчет в файл