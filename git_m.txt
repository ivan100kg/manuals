# git

--- Settings --------------------------------------------------------------
git config --list								# all settings
git config --list --show-origin					# the same + location of
												  config files
git config user.name							# show a value of a key
git config --global user.name "my Name"       	# name
git config --global user.email myemail@ex.hu  	# email
git config --global core.editor vim				# default editor
git config --global init.defaultBranch main		# name of main default new 
												  branch(master is default)

--- Help -----------
git help <команда>
git <команда> --help
man git-<команда>

--- What is Git -------------------------------------------------------------
# main states of files
    modifed     - (измененные) поменялись, но ещё не были зафиксированы
    staged      - (индексированный) это изменённый файл в его текущей версии,
                  отмеченный для включения в следующий коммит.
    commited    - (зафиксированный) файл уже сохранён в вашей локальной базе

# main sections of a Git project
    Working directory           - снимок одной версии проекта
    Index                       - что попадёт в следующий коммит
    .git derectory(Repository)  - метаданные и база объектов вашего проекта

    Working dir  Index  .git
        |          |      |
        |<----------------+     - checkout the project
        +--------->|      |     - stage fixes
                   +----->|     - commit
    
--- Getting a Git Repository -------------------------------------------------
git init        # создание репозитория в сущ каталоге. Создается дир-я .git
                  содерж все необх файлы репозитория — структуру Git реп-ия.
git clone <url> # с сервера забирается (pulled) каждая версия каждого файла из
                  истории проекта. Извлекается рабочая копия последней версии. 

--- Git Basics ------------------------------------------------------------
# 
git status                      # статус
git add filename or -A          # add file to index
git reset                       # отменить add
git commit -m "Initial commit." # коммит, фиксация изменений, -m - коммент

# связать реп с созданным на github назовем origin(мб много в проекте)
git remote add origin https://github.com/ivan100kg/remember.git

# пересылаем на сервер origin - имя master - ветка по умолчанию
git push origin master

# клонировать себе уже готовый реп с github и получить копию локально
git clone https://github.com/ivan100kg/remember.git

# скачать изменения/обновления репозитория
git pull origin master

# Ветки ***
git branch new_branch    # новая ветка точная копия master
git branch               # показывает ветки и на какой находимся мы
git checkout new_branch  # переключение на ветку по имени
git merge new_branch     # слияние веток
git branch -d new_branch # удаление ветки new_branch

# Коммиты
git log                     # Список всех коммитов и их идентификаторов
git log hg6d4j              # пишем первую часть идентификатора - подробная инфа
git diff hdf56d..6uii8j     # разница между коммитами
git difftool hdf56d..6uii8j # разница между коммитами графич редактор
git checkout hdf56d         # возвращение файла к выбранному коммиту
git revert hdf56d           # исправление коммита


# игнорируемые файлы
# создаем файл .gitignore добавляем в него все что хотим игнорировать
*.log или *.png # шаблон для добавления в игнор сразу много файлов
photos/         # папка
.idea/          # скрытая папка
her.txt         # отдельный файл
