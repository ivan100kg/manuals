# Matplotlib
import matplotlib.pyplot as plt # принятое соглашение
Figure # это контейнер самого верхнего уровня
Axes   # это та область на которой чаще всего и отражаются графики
XAxis и YAxis # Они содержат, деления, метки и прочие вспомогательные атрибуты

# Создание графиков
fig = plt.figure()            # рисунок без графиков
fig, ax = plt.subplots()      # a figure with a single Axes - 1 график
fig, axs = plt.subplots(2, 2, # a figure with a 2x2 grid of Axes - сетка графи-
           figsize=(3,3))     # ков 2х2, размер графиков 3х3

# Рисование графиков - 2 стиля
x = np.linspace(0, 2, 100)       # массив для пирмера
# OO-style - больше подходит для неинтерактивных проектов
ax.plot(x, x, label='linear')    # нарисовать график + назначить подпись
ax.plot(x, x**3, label='cubic')  # нанести еще один график сюда же
ax.set_xlabel('x label')         # метка оси OX
ax.set_ylabel('y label')         # метка оси OY
ax.set_title("Simple Plot")      # название рисунка(сверху)
ax.set(xlabel='x', ylabel='y',   # все сразу
       title='trigonometry')     
ax.legend()                      # показать подписи(если много графиков)
# pyplot-style - больше подходит для Jupyter
plt.plot(x, x, label='linear')   # нарисовать график + назначить подпись
plt.plot(x, x**3, label='cubic') # нанести еще один график сюда же
plt.xlabel('x label')            # метка оси OX
plt.ylabel('y label')            # метка оси OY
plt.title("Simple Plot")         # название рисунка(сверху)
plt.legend()                     # показать подписи(если много графиков)

# параметры plot() https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.plot.html#matplotlib.pyplot.plot - тут все параметры
linestyle='--' # стиль линии -. - --
color='blue'   # цвет графика
marker='o'     # отметки(маркеры) на графике 'o' - точки
label='legend' # подпись
'r.-o'         # 3 в одном (цвет, линия, маркеры)

# Несколько подграфиков, пример 2х2
fig, axs = plt.subplots(2, 2) # 2х2 - четыре подграфика
ax1 = fig.add_subplot(221)    # подграфик в матрице 2х2, левый-верхний(всего 4)
ax2 = fig.add_subplot(224)    # подграфик в матрице 2х2, правый-нижний(всего 4)
ax3 = fig.add_subplot(212)    # нижняя половина(всего 2), 211 - верхняя
ax4 = fig.add_subplot(121)    # левая половина(всего 2), 122 - правая
ax5 = fig.add_subplot(111)    # все пространство(1 вариант)
ax1.plot(x,x)                 # рисование на определенном подграфике
axs[0,1].plot(x,x)            # рисование на подграфике 1 строке 2 столбца
# Параметры метода plt.subplots 
sharex # одна ось X для всех (настройка xlim отражается на всех подграфиках) 
sharey # одна ось Y для всех (настройка ylim отражается на всех подграфиках)     

# Риски, метки и надписи
ax.set_xticks([np.pi, np.pi*2]) # свои риски на оси
ax.set_xticklabels(['pi', '2pi'], rotation=30, fontsize='small') # надписи рисок

# ограничение диапазона
ax.set_xlim([1,10])          # изменить диапазон по Х от 1 до 10
ax.set_ylim(['2001','2003']) # изменить диапазон по Y по году
ax.get_xlim()                # текущий диапазон

# текст и рисунки
ax.text(x, y, 'Hello world!',  family='monospace', fontsize=10) # текст
# фигуры    
rect = plt.Rectangle((0.2, 0.75), 0.4, 0.15, color='k', alpha=0.3)
circ = plt.Circle((0.7, 0.2), 0.15, color='b', alpha=0.3)
pn = plt.Polygon([[0.15, 0.15], [0.35, 0.4], [0.2, 0.6]],  color='g', alpha=0.5)
ax.add_patch(rect) # рисование

# Сохранение графиков в файле
plt.savefig('figpath.svg') # сохранить рисунок
plt.savefig('figpath.png', dpi=400, bbox_inches='tight') # качество+, обрезка

# картинки
plt.imshow(pic, cmap=plt.cm.binary) # pic - array(1024,768,3) - RGB
                                      cm.binary - (1024,768)  - gray
