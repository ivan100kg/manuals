Network

Модели сетей
    клиент-сервер
    клиент - запрос -> сервер
    клиент <- ответ- сервер
    пример: Web Browser
    
    равноранговые сети peer-to-peer
    группа юзеров, могут общаться друг с другом
    не имеет сервера и клиентов
    пример: BitTorrent

Классификация сетей
    Тип коммутации:
    Коммутация каналов
    Коммутация пакетов
    
    Технологии передачи
    широковещательные - всем машинам в сети
    точка-точка       - от машины к машине
    
    Протяженность    
    +-----------+------------------+------------------+
    |расстояние |расположены       |пример            |
    +-----------+------------------+------------------+
    |1м         |на одном КВ метре |персональная сеть |
    |10м        |комната           |локальная сеть    |
    |100м       |здание            |...               |
    |1км        |кампус            |...               |
    |10км       |город             |муниципальная сеть|
    |100км      |страна            |глобальная сеть   |
    |1000км     |континент         |...               |
    |10т.км     |планета           |интернет          |
    +-----------+------------------+------------------+ 
    PAN  - private area network
    LAN  - local area network ЛВС локальная вычислительная сеть
    VLAN - virtual local area network
    MAN  - metropolitan area network
    WAN  - wide area network

Топология сетей
    полносвязная -  каждое уст-во в сети имеет прямое подкл к др устр-ам
    ячеистая     -  вид полносвязной, но с удалением некоторых связей
    звезда       -  все компы подсоед через центральное устр-во
    кольцо       -  все по кругу друг с другом
    дерево       -  разветвляется на несколько утср-в
    общая шина   -  все к одной шине, доступная информация
    смешанная    -  самая распространенная(включает всякие)

    Физическая топология - соединение устр-в в сети
    Логическая топология - правила рспр-ия сигналов в сети

Стандарты комп сетей
    ISO  -  (Международная организация по стандартизации)
            эталонная модель вз-я систем
    IEEE -  (Институт инженеров электротехники и электроники)
            технологии передачи д-х
    IAB  -  (Совет по архитектуре Интернета) - протоколы интернет
            IRTF - долгосрочные перрспективные исследования
            IETF - выпускает стандарты на сетевые протоколы
            RFC  - документы с описанием работы протоколов
    W3C  -  (Консо́рциум Всеми́рной паути́ны) - стандарты web
            разметка HTML
            таблицы стилей CSS
            архитектура web-сервисов
            язык разметки XML

Декомпозизия сети
    Сеть разбивается на уровни
    Сервис    - описывает какие функции реализует уровни
    Интерфейс - набор примитивных операций, которые нижний ур пред-ет
                верхнему(общение внутри компа)
    Протокол  - правила и соглашения, исп для связи уровня N одного компа с 
            ур N - другого (виртуальное общение между компами)
                |
            интерфейс N |                        другой узел:
                    уровень N --- протокол N --- уровень N
                        |
            инт-с N-1   |

Инкапсуляция
    Включение сообщения вышестоящего уровня в сообщение нижестоящего
    Сообщение: заголовок + данные + концевик
    3 ур ###         # формируется сообщение
    2 ур $## $#      # разбивает сообщение(если большое) и доб-тся заголовки
    1 ур @$##@ @$#@  # добавляет заголовки и концевики для отправки в среду
      --> передача на др комп
    1 ур $## $#      # убирает заголовки и концевики
    2 ур ## + #      # убирает заголовки и оббъединяет сообщение
    3 ур ###         # фпередает приложению
    
Модель OSI (Open Systems Interconnection model) - эталонная	
        HOST1   protocols    HOST2
    Application-----------Application  # прикладной уровень - приложения
         |-interface           |         сообщение
    Presentation----------Presentation # согласование синтаксиса и семантики,
         |                     |          шифрование TSL SSL(сообщение)
    Session-----------------Session    # сеансы связи
         |                     |         сообщение
    Transport--------------Transport   # управление надежностью
         |                     |         сегмент/дейтаграмма
    Network-----------------Network    # адресация сетевые и глоб адреса,
         |                     |          маршрутизация(пакет)
    Data Link--------------Data Link   # выделение из битов сообщений, корр
         |                     |          ошибок, физ адресация(кадр)
    Physical---------------Physical    # передача битов (биты в сигналы и
         |                     |          обратно)(бит)
      Data Transmission Environment    # среда передачи данных 

Модель TCP/IP
    Прикладной(прикладной, сеансовый, презент)
    Транспортный(транспортный)
    Интернет(сетевой)
    Сетевых интерфейсов(фз + канальный)

Стек протоколов TCP/IP
    Прикладной           HTTP SMTP DNS FTP
    Транспортный         TCP UDP
    Сетевой              IP ICMP ARP DHCP
    Сетевых интерфейсов  Ethernet Wi-fi DSL

Сетевые устройства
    Концентратор     
    хаб, hub - ретранслирует входящий сигнал на все порты
    (подкл устройства) логич подкл общая шина. Физический уровень
    
    Коммутатор    
    свитч, switch - передаёт данные только непосредственно
    получателю. Полносвязная топология. Канальный уровень.
    Пересылает согласно таблице MAC адрес - порт.
    
    Маршрутизатор 
    роутер, router - пересылает пакеты между различными сегментами
    сети на основе правил и таблиц маршрутизации. Сетевой уровень.
    Нужен для объединения сетей.

Хост 
    (от англ. host — «владелец, принимающий гостей») — любое устройство,
    предоставляющее сервисы формата «клиент-сервер» в режиме сервера по каким
    -либо интерфейсам и уникально определённое на этих интерфейсах.

Подсеть       
    набор линий связи и маршрутизаторов между двумя хостами.

Линии связи   
    медные провода/оптоволокно/радиосвязь между различными
    сегментами сети на основе правил и таблиц маршрутизации. 

ISP 
    internet service provider


Физический уровень-------------------------------------------------------------
    передача потока бит по среде передачи данных, не вникая в смысл информации,
    преобразовывает биты в эл сигналы и обратно
    Канал связи: 
        Пропускная способность бит/с
        Задержка
        Количество ошибок
    Тип каналов:
        Симплексный - только в одну сторону
        дуплексный - в две стороны одновременно
        полудуплексный - в две стороны по очереди
    Среда передачи: (самые ходовые) 
        Витая пара - 4 витые пары проводов
        Оптоволокно - меньше всего ошибок
        Радиоволны GSM-900MHz Wi-Fi-2.4GHz,5GHz
    Представление информации:
        прямоугольные импульсы(цифр сигнал) - медные провода
        синусоидальные(аналоговый) - оптоволокно, беспроводная среда

Канальный уровень--------------------------------------
    Передача сообщений по каналам связи - кадров(frame)
    Технологии канального уровня:
        Ethernet (медные и оптич провода)
        Wi-Fi    (беспроводная среда)
    Определение начала/конца кадра в потоке бит:
    В Fast Ethernet для обозначения кадра применяют неиспользуемые символы
    в представлении данных:
        JK (11000)(10001) - начало кадра
        T (01101)         - конец кадра

    Обнаружение и коррекция ошибок методы:
        обнаружение - контрольная сумма если не совпадает кадр отбрасывается
        исправление - доп коды исправляющие ошибки
        повторная отправка если ошибка
        повторная отправка после таймера ожидания если кадр не дошел

    Множ-ый доступ к каналу связи: 
    Адресация, согласованный доступ к каналу
    канальный уровень разделен на 2 подуровня:
        1. подуровень управления логическим каналом LLC(Logical Link Control)
            передача данных(создания кадров, обработка ошибок)
            общий для разных технологий
            мультиплексирование - перед данных разн протоколов(IP, ARP, ICMP)
            на уровень MAC
            управление потоком - предотвр "затопления" медленного получателя
            быстрым отправителем
        2. подуровень управления доступом к среде MAC(Media Access Control)
            совместное исп разделяемой среды
            предотвр коллизии - канал одновременно исп только 1 отправитель
            методы управления доступом:
                рандомный - выбирается случайный компьютер
                на основе Token Ring - поочер, у кого токен тот передает
            адресация
            специфич для разных технологий

Ethernet классический
    Это технология используется на физическом и канальном(LLC, MAC) уровнях
    IEEE - стандарты 802.3(u,z,ab,bz,ae,an,ba)(Fast100M,Gigabit,5G,10G,100G)
    
    Классический  Ethernet - разделяемая среда
    Общая шина - коаксиальный кабель.
    Концентратор - физ топология звезда, лог топология - общ шина.
    На физ уровне сод-ся описание передачи данных на кабелях(коаксиал, вит
    пара, опт)
    На кан ур сод-ся методы доступа и протоколы, одинак для люб среды,
    подуровни смешаны.
    Стандартный кадр - Ethernet II или IEEE 802.3 юридич стандарт(исп реже).
    Формат кадра Ethernet:
    +----------+----------+-----------+------------+-----------+
    |  6 байт  |  6 байт  |  2 байта  |46-1500 байт|  4 байта  |
    +----------+----------+-----------+------------+-----------+
    |адрес пол |адрес отпр|   тип     |   данные   |контрол сум|
    +----------+----------+-----------+------------+-----------+
    | ------ з а г о л о в о к -------|            |  концевик |
    Тип - код протокола от кот получ данные:
        0800 - IPv4
        86DD - IPv6
        0806 - ARP
    Контрольная сумма - если совпадает то кадр обрабатывается 
    если нет - отбрасывается.

MAC адреса
    Служат для идентификации сетевых интерфейсов узлов сети.
    Ethernet (IEEE 802.3)
    Wi-Fi (IEEE 802.11)
    
    Формы записи: 
    1C-75-08-D2-49-45  # 6 байт в 16-чной системе, : либо -, 
    1C:75:08:D2:49:45  # первые 3 байта - id орг-и OUI, послед - производитель.

    Типы:
    индивидуальный unicast:         30-9C-23-15-E8-8C
    групповой multicast:            01-80-C2-00-00-08 # перв бит старш байта = 1           
    широковещательный broadcast:    FF-FF-FF-FF-FF-FF

    Управление доступом к среде:
    CSMA/CD - Carrier Sense Mltiple Access with Collision Detection.
    Множественный доступ с прослуш несущей частоты и обнаружением коллизий.
    Если несущ частота свободна - компьютер передает данные. 
    
    Схема передачи:
    преамбула                | кадр | межкадровый интервал
    -------------------------+------+----------------------
    длина 8 байт             |см.   | 9.6 мкс(возможность)            
    первые 7 байт:  10101010 |выше  | другим компам передавать
    последний байт: 10101011 |      |
    -------------------------+------+----------------------
    После соединения, остальные компы начинают читать кадр.
    Первые 6 байт - адрес получателя.
    Если совпадает с их MAC адресом то принимают, иначе отбрасывают.


Коммутируемый Ethernet(FAST Ethernet+) - точка-точка
    Нет разделяемой среды(данные передает коммутатор на нужный комп согласно
    таблице коммутации).
    Нет коллизий(нет разделяемой среды).
    Устройства - коммутаторы.
    Таблица коммутации - соответствие MAC-адресов портам коммутатора.
    Алгоритм обратного обучения - заполнение таблицы коммутации(при первом
    обращении к коммутатору).
    Алгоритм прозрачного моста - передача кадров коммутатором(связь между
    коммутаторами).

VLAN - Virtual local area network (виртуальная локальная сеть)
    Технология разделения единой сти на несколько сетей не связ друг с другом.
    Исп-ся на канальном уровне в коммутаторах.
    Широковещательный траффик не попадает из одной VLAN в другую.
    
    Таблица коммутации:
    +----+-----------------+----+
    |Port| MAC             |VLAN| с одной VLAN нельзя передать кадр в др
    +----+-----------------+----+ при передаче на другой присоед-й коммутатор
    | 1  |08:00:27:31:4f:2c| 2  | передается № VLAN в кадре
    | 2  |12:e3:76:c3:2e:0c| 3  |
    | 3  |14:cc:09:00:1a:7e| 3  |
    | 4  |f2:03:33:04:1b:5f| 2  |
    +----+-----------------+----+
    Стандарт IEEE 802.1Q
    +----------+----------+-------+-------+-------+------------+-----------+
    |  6 байт  |  6 байт  |2 байта|2 байта|2 байта|46-1500 байт|  4 байта  |
    +----------+----------+-------+-------+-------+------------+-----------+
    |адрес пол |адрес отпр| тип   | тег   | тип   |данные      |контрол сум|
    +----------+----------+-------+-------+-------+------------+-----------+
        1 поле тип стандартного кадра: 0x8100 - указать что кадр с VLAN   
        поле тег - номер VLAN
        2 поле тип - код протокола уровня выше(IP - 0x0800)

Протокол STP(Spanning Tree Protocol)(RSTP - rapid 802.1w)
    Протокол связующего(остовного) дерева.
    Определен в стандарте IEEE 802.1D.
    Используется на канал уровне для защиты от кольцевого соединения комм-ов.
    Отключает один из портов для предотвращения широковещательного шторма,
    также включает порт если второй вышел из строя.
    Защищает от ошибок(подключение кабеля не ктому компу, разрыв, шторм).
    
    Работа  STP:
    Выбор корневого коммутатора(автоматически, либо сисадмин):
        Комм-ры обмениваются сообщениями BPDU(Bridge Protocol Data Units).
        Отправляют кажд 2 сек на групп аддр STP 01:80:C2:00:00:00.
        Корневой ком выбирается искодя из его минимального BID(MAC).
    Определение кратчайших путей до корневого коммутатора:
        Комм-ры рассылают на все порты BPDU с мин расст до корн ком-ра.
    Отключение всех остальных соединений.

Wi-Fi
    2 режима работы Wi-Fi:
    Инфраструктурный     - точки доступа подкл к интернет.
    Одноранговый(ad-hoc) - без точек доступа, между комп-ми.
    Используется на физическом и канальнном уровне(LLC и MAC).
    
    Физический уровень:
    Стандарт IEEE 802.11.
    6 разных стандартов 802.11(a-ac):
        назв  скорость    частота
              1 и 2       2.4
          a   54          5 
          b   11          2.4
          g   54          2.4
          n   150         2.4 5
          ac  1690        5
    
    В дипазоне 2.4 ГГц используются 14 каналов 2.412 - 2.484 ГГц.
    Wi-Fi джунгли - все каналы заняты
    
    Для увеличения скорости передачи изменяется:
    Ширина канала - 20 - 160 МГц.
    Методы модуляции.
    Интервал между сигналами.

    Канальный уровень:
    Используется подтверждение получения кадра, след передается после 
    получ подтв.
    Коллизия - отсутствие подтверждения получения кадра.
    
    Метод доступа к среде:
    Ethernet - SCMA/CD прослуш несущей частоты и обнаружение коллизий
    Wi-Fi    - SCMA/CA прослуш несущей частоты и предотвращение коллизий 

    SCMA/CA:
    Прослушивание несущей частоты, если свободна.
    Передача кадра.
    Короткий межкадровый интервал.
    Передача подтверждения.
    Межкадровый интервал.
    Период молчания(рандом время).
    Передача кадра.

    На LLC используется такой же формат кадра как и в Ethernet
    Формат кадра MAC:
    +-------+-------+------+------+-------+------+------+-----------+-------+
    |2 байта|2 байта|6 байт|6 байт|6 байта|2 байт|6 байт|0-2304 байт|4 байта|
    +-------+-------+------+------+-------+------+------+-----------+-------+
    |упр    |длит-ть|адр1  |адр2  |адр3   |упр-е |адр4  | тело      |контр  |
    |кадром |       |      |      |       |очеред|      | кадра     |сумма  |
    +-------+-------+------+------+-------+------+------+-----------+-------+
    DA - Destination address (адрес назначения).
    SA - Source address (адрес отправителя).
    RA - Receiver address (устр-во принимающ данные из беспроводн среды).
    TA - Transmitter address (устр-во передающ данные в беспроводную среду).
    Передача кадра в интернет:
        адр1 - RA - MAC адрес точки доступа приним сигнал из беспров среды.
        адр2 - TA/SA - MAC адрес компьютера(устр-во передающ данные в
            беспроводную среду и он же отправитель).
        адр3 - DA - MAC адр маршрутизатора который передает данные в интернет.
    Прием кадра из интернет:
        адр1 - RA/DA - MAC адрес компьютера (он и приним уст-во из бесп среды
            и получатель).
        адр2 - TA - MAC адрес точки доступа - передает данные в эфир.
        адр3 - SA - MAC адрес маршрутизатора.
    Длительность - зарезервированное время передачи.
    Управление кадром - различные характкристики(10 установок).
        Различные типы кадров(данных, контроля, управления).
        Доп функции - упр питанием, фрагментация.
    
    BSSID(MAC адр точки доступа) SSID - идентиф сети.
    
    Сервисы Wi-Fi:
    Ассоциация - согласование между точкой и устройством(парам Wi-Fi).
    Аутентификация - подтверждение на использование сети.
    Передача данных.
    Защита информации(шифрование) WEP WPA WPA2(Wi-Fi Protected Access 2).

Сетевой уровень---------------------------------------------------------
    Нужен для создания большой сети которая объединяет другие малые сети
    построенных на разных технологиях (Ethernet, Wi-Fi, 5G/4G/3G, MPLS...)
    без сетевого уровня невозможно связать сети с различными технологиями.
    Устройство сетевого уровня само обрабатывает кадры полученные с различн
    технологий и решает отправлять подтверждение получения(Wi-Fi) или нет в 
    случае Ethernet, так же при отправке.
    
    Для согласования MAC адресов используются глобальные адреса, не зависят от
    технологий канального уровня. Все устройства сети имеют глобальный и 
    локальный адрес. Определение локального адреса по глобальному определяется
    механизмом опис в прот ARP(TCP/IP).
    
    Широковещание - если в малой сети не поддерживается, то если возникла необх
    в широковещании, сетевое устройство посылает всем уст-вам сети по очереди.

    Фрагментация - исп на сетевом уровне, для того чтобы всем типам технологий
    доходил кадр не превышающий их макс кадр.

    На самом деле сейчас доминирует Ethernet и Wi-Fi это адаптация Ethernet для
    беспроводной среды. MAC адреса, формат LLC одинаков, согласуются между
    собой без сетевого уровня.

    Почему бы не использовать только Ethernet?
    минусы:
    таблица коммутации - все MAC адреса мира (невозможно)
    широковещание - страшно представить
    STP просто ужас что сделает для предотвращения шторма

    Итак сетевой уровень плюсы
    Объединение сетей различного типа
    Агрегация адресов, работа с блоками адресов(подсети)
    Мусорные пакеты отбрасываются(нет адреса получ или еще что-то)
    несколько активных путей в сети, выбор лучшего маршрута

    Маршрутизация - поиск маршрута доставки пакета через узлы(маршрутизаторы)
    учитывается топология сети и загрузка каналов связи маршрутизаторов.
    Каждый пакет может пройти по разным маршрутам, всегда.

    Протоколы сетевого уровня стека TCP/IP:
    IP    интернет протокол
    ICPM  управление сетью
    ARP   связь глобальных и MAC адр
    DHCP  автоматической назначение ip адресов устр-м в сост сети

    Локальные адреса
    Адреса в технологии канального уровня
    MAC(Ethernet, Wi-Fi), IMEI(4G)

    Глобальные адреса
    Адреса сетевого уровня IP адреса
    не привязаны к технологии
    применяются при объединении сетей(Интернет)

IP address
    2 версии:
    IPv4: адрес 4 байта
        4 десятичных числа 0-255, разделенных точками
                32 бита
        11010101.10110100.11000001.00000011
                213.180.193.3  
    IPv6: адрес 16 байт

    Подсеть(subnet) - множ-во комп-в у которых старшая часть IP-адреса
    одинаковая
    
    Маска подсети показывает где в адресе № сети, а где № хоста
    структура маски:
    11111111.11111111.11111111.00000000
       255.255.255.0
       24 бит
    накладывается на IP адрес(AND) для выявления подсети
    где единицы - там номер подсети
    где нули - номер хоста

    Структура IP:
    213.180.193.3/24 - IP adr и маска(либо так указывать маску сокращенно)
    255.255.255.0    - маска(либо так без /24)
    213.180.193.0    - номер подсети
    0.0.0.3          - номер хоста

    Маршрутизаторы работают не с отдельными компами а с подсетями!
    
    Типы IP-адресов
    индивидуальный(unicast)      # адрес конкретного компа в сети
    групповой(multicast)         # адрес исп-й несколькими компами
    широковещательный(broadcast) # адрес исп-й для получения данных всеми ком
                                   213.180.193.255 - широковещ адрес заканчив
                                   на 255 там где адрес хоста, пакеты идут
                                   только внутри сети.
    Специальные IP-адреса:
    битовые 0 в номере хоста 213.180.193.0   # это адрес подсети
    битовые 1 в номере хоста 213.180.193.255 # это широковещ-й адрес
    договоренность - хост с номером 1 - это маршрутизатор(шлюз) 213.180.193.1
    0.0.0.0 - адрес текущего хоста(комп еще не получил свой адрес)
    255.255.255.255. - все хосты текущей подсети(огранич шир-й адрес)
    127.0.0.0/8 - обратная петля(loopback) сеть для тестирования, данные
        не передаются в сеть а приходят обратно 127.0.0.1 - localhost(наш комп)
    169.254.0.0/16 - Link-local адреса(назначаются ОС если не доступна др конф)

    Частные IP-адреса: (используются без интернета, не маршрутизируются)
    10.0.0.0/8         к интернету можно подключиться с
    172.16.0.0/12      помощью NAT(Network Address Translation)
    192.168.0.0/16
    
    NAT (Network Address Translation) - ретранслирует внутренний адрес лок сети
    во внешний IP адрес.

Протокол IP(межсетевой протокол):
    Используется на сетевом уровне для передачи данных
    Передача данных осущ без гарантии доставки и без сохранения следования сообщ
    Использует передачу данных без установки соединения
    Задачи: объединение сетей, маршрутизация, кач-во обслуж
    
    Формат заголовка IP-пакета
    +-----+-----+-----+------------------------+ 
    |4бита|4бита|8бит |         16 бит         | номер версии: 0100 (IPv4/IPv6)
    |номер|длина|тип  |     общая длина        | длина загол: обяз части+опции
    |верс |загол|сервс|     макс 65535 байт    | тип сервиса: кач обсл(не исп)
    |-----+-----+-----+-----+------------------| общ длина: заг+дан(1500байт)
    |16 бит           |3бита| 13 бит           | id/флаги/смещ: для фрагм-ции
    |Идетиф пакета    |флаги|смещение фрагмента|
    |--------+--------+-----+------------------|
    |8 бит   |8 бит   |  16 бит                | время жизни: макс время(кол-во
    |врем жиз|тип прот| контр сумма            | марш-в) кот может пройти пакет
    |--------+--------+------------------------| тип прот: номер след протокола
    |      32 бита IP-addr отправителя source  | (TCP-6/UDP-17/ICMP-1)
    |------------------------------------------| контр сумма: если не совпад -
    |      32 бита IP-addr получателя destinat | отбрасывается пакет.
    |------------------------------------------|
    |    опции и выравнивание(не обяз)         |
    +------------------------------------------+

    Маршрутизация - поиск маршрута доставки пакета через маршрутизаторы.
    Этапы:
    изучение сети
    продвижение пакетов
    
    Обработка пакета:
    Если пакет предназначен к сети к которой подключен маршр-р напрямую
    то марш-р отправляет пакет в эту сеть непосредственно.
    Если пакет предназначен для сети к тоторой не подключен марш-р напрямую,
    но он знает к какому другому подключенному к нему мар-ру подключена
    нужная сеть, то он передает пакет др марш-ру, называемому шлюзом.
    Если пришел пакет маршрута которого мы не знаем - пакет отбрасывается.

    Таблица маршрутизации:
    +-----------+--------------+-----------+-----------+-------+
    |Адрес      | Маска        | Шлюз      | Интерфейс |Метрика|
    +-----------+--------------+-----------+-----------+-------+
    |192.168.1.0| 255.255.255.0|присоединен|192.168.1.2|276    |
    |10.1.0.0   | 255.255.0.0  |10.1.0.59  |10.1.0.15  |306    |
    +-----------+--------------+-----------+-----------+-------+
    Адрес и Маска - нужной подсети
    Шлюз либо присоединен(сразу в подсеть), либо адр др маршрутизатора
    Интерфейс - чере какой интерф марш-ра надо отправить пакет
    Метрика - некое число хар-т(колво марш и скор каналов) расстояние

    Маршрутизатор по умолчанию - шлюз Gateway - на него отправляются пакеты для
    неизвестных сетей.
    условное обозначение 0.0.0.0, маска 0.0.0.0 или default

    Просмотр таблицы маршрутизации:
    route print - Windows
    route -n    - Linux

    Протокол IP - фрагментация(только в IPv4)
    Фрагментация - разделение пакета на части.
    3 пункта в заголовке IP под фрагментацию:
    Идентиф пакета - одинаковый номер пакета во всех фрагментах
    смещение - измеряется в 8-байтовых блоках, например пакет 4000 байт
        1 фрагмент 0-1479    - смещение=0/8=0
        2 фрагмент 1480-2959 - смещение=1480/8=185
        3 фрагмент 2960-3980 - смещение=2960/8=370
    Флаги 3 бита:
        1 бит - зарезервирован
        2 бит - DF не фрагментировать
        3 бит - MF есть еще фрагменты

    пример пакета 4000 байт
    |81|0|1|     |    # 1 фрагмент, id#81, смещение 0, MF - 1 - есть еще
    |81|185|1|   |    # 2 фрагмент, id#81, смещение 185, MF - 1 - есть еще
    |81|370|0|   |    # 3 фрагмент, id#81, смещение 370, MF - 0 - последний
    далее все сообирается обратно в большой пакет

Протокол DHCP(Dynamic Host Configuration Protocol) дин-ая конфиг хостов
    Автоматически назначает IP адреса хостам
    Требует DHCP сервер(с таблицей выделенных IP адресов) который обменивается
    сообщениями(запрос-ответ) с клиентами(получателями IP)
    Получение адреса: DORA
    К|                  |С
    л|-->--Discover-->--|е  # запрос на широковещ адрес, ищем сервер DHCP
    и|--<--OFFER-IP--<--|р  # сервер посылает предложение с новым IP
    е|-->-REQUEST-IP->--|в  # запрос с этим новым IP
    н|--<---ACK-IP---<--|е  # сервер высылает подтверждение
    т|                  |р
    Можно назначать IP адреса вручную
    Динамически адреса назначаются из списка адресов.
    Пул адресов - диапазон адресов DHCP сервера.
    Динамически назначенные адреса имеют срок аренды, по истечению которого
    клиент посылает REQUEST  и получает продление ACK. 
    REALISE - сообщение от клиента о прекращении пользования IP(при выключ)
    DHCP дополнительно передает маску, шлюз, адрес DNS, маршруты...

Протокол ARP(Address Resolution Protocol) - прот разрешения адресов
    Обеспечивает связь сетевого и канального уровня. Определяет по IP адресу
    MAC адрес устройства. ARP работает в режиме запрос-ответ. Посылается
    широковещ запрос у кого IP:192.168.0.100? - у кого адрес совпал посыл ответ.
    
    ARP пакет запроса:
    +--------+-------------------------+
    |  Поле          |значение         |
    +----------------+-----------------+
    |тип сети        |1                |    # 1 - Ethernet
    |тип протокола   |2048             |    
    |дляна лок адр   |6                |
    |длина глоб адр  |4                |
    |операция        |1                |    # 1 - запрос, 2 - ответ
    |лок адр отпр-ля |1С:75:08:D2:49:45|
    |глоб адр отпр-ля|192.168.0.100    |
    |лок адр пол-ля  |00:00:00:00:00:00|
    |глоб адр пол-ля |192.168.0.101    |
    +----------------+-----------------+
    
    ARP находится между канальным и сетевым уровнем
    пакеты ARP вкладываются в пакет Ethernet без IP и не проходят через марш-р
    Комп-ры в сети записывают(кешируют) инфо о MAC и IP в ARP-таблицу:
    +-------------+-----------------+------------+
    |IP-адрес     |MAC-адрес        |Тип         |
    +-------------+-----------------+------------+
    |172.16.10.253|00:1C:C5:34:B3:01|Динамический| # автоматич адрес(срок жизни)
    |172.16.10.88 |1С:75:08:D2:49:45|Статический | # вручную назначен(постоян)
    +-------------+-----------------+------------+
    arp -a  # посмотреть таблицу

Протокол ICMP(Internet Control Message Protocol)- прот межсетевых упр-х сообщ
    Сообщения об ошибках в сети(получатель недоступен/законч время жизни
    пакета...)
    формат заголовка:
    +---------+---------+---------+
    |1 байт   |1 байт   |2 байта  | тип - номер ошибки
    |тип сообщ|код сообщ|контр сум| код - подробное опис ошибки
    +---------+---------+---------+
    | 4 байта завис от типа и кода| служеб инфо об ошибке
    +-----------------------------+
    |  д а н н ы е                | фрагмент пакета при пер котор поиз ошибка
    +-----------------------------+
    типы 0      эхо-ответ
         3      узел назнач не достижим
         5      перенаправление маршрута
         8      эхо-запрос
         9      сообщ о маршру-ре
         10     запрос сообщ о марш-ре
         11     истечение времени жизни пакета
         12     проблемы с параметрами
         13     запрос отметки времени
         14     ответ отметки времени
    коды 0      сеть недостижима
         1      узел недостижим
         2      протокол недостижим
         3      порт недостижим
         4      ошибка фрагм-ии
         5      ошибка в марш-те источника
         6      сеть назначения неизвестна
         7      узел назначения неизвестен
         8      узел-источник изолировани
         9      административный запрет
    
    Тестирование работы сети 
    ping(проверка доступности сети) 
        ping vk.com
    traceroute(определение маршрута к получателю)
        tracert vk.com

Передача пакетов на сетевом и канальном уровнях
    IP адрес получателя и отправителя постоянны, а MAC адреса перезаписываются
    постоянно между узлами сети.

Транспортный уровень----------------------------------------------------------
    передача данных между процессами на разных хостах
    сетенезависимый уровень(все комуникации скрыты в ниж уровнях)на транспорт
    ном уровне как бы идет вз-ие сразу между хостами
    безопасность и надежность
        гарантия доставки(подтверждение и повторная отправкаб нумерация сообщ)
    адресация
        порты 1-65535 - адреса на транспортном уровне. Каждое веб прилож
        имеет свой порт 192.168.0.100:80 (порт 80)
        зарегестированные порты: 1025-49151 (рег в IANA)
        динамимические порты: 49151-65535 (назн-ся ОС автоматич)
        открывая браузер ОС дает дин порт чтобы ответ пришел сюда же
    2 протокола транспортного ур TCP UDP
    интерфейс сокетов - управление транспортным уровнем

Протокол UDP - User Datagram Protocol (прот дейтаграмм пользователя)
    основная задача:
    указать порты отправителя и получателя

    работа:
    datagramm - сообщение UDP(телеграмма)
    нет соединения
    нет гарантии доставки
    нет гарантии сохранения порядка сообщений
    надежность доставки по срав с IP не повышается
    высокая скорость работы
    ошибки происх редко, могут обрабатыватся приложением

    область применения:
    клиент-сервер
    короткие запросы-ответы

    формат заголовка:
    +----------------+----------------+
    | 16 бит         | 16 бит         | Длина UDP 8-65515 байт 
    | порт отпраителя| порт получателя|
    +----------------+----------------+
    | 16 бит         | 16 бит         |
    | длина UDP      | контр сум UDP  |
    +----------------+----------------+

Протокол TCP - Transmittion Control Protocol (прот управл передеачей)
    установка соединения:
    убедиться что отправитель и получатель хотят предавать данные
    договориться о нумерации потока байт
    договориться о парам соединения(макс размер сегмента...
    отправитель --SYN, номер байта -->       получатель
                <--SYN, байт 36829, ACK 7537 ---
                --байт 7538, ACK 36830--->
    схема разрыва соединения: одновременная, односторонняя
        FIN --> # сигнал о разрыве
        <-- ACK # подтверждение
        <-- FIN
        ACK -->
        -------
        RST --> # быстрое разрыв соед
    
    Надежная передача потока байт(reliable byte stream):
    принимается поток байт от верх ур, разбивается на сегменты, 
    отправляются получателю и уже собираются на другом хосте

    Гарантия доставки:
    отправитель --сегмент данных, байт 0--> получатель
                <--подтвеждение, жду байт 1024---(ACK, Acknowledgment)
                --след сегмент, байт 1024---> 
    если подтверждение не приходит, отправитель уст таймер и посыл повторно
    скользящее окно - подтверждается группа сегментов а не каждый
        существенно влияет на скорость передачи
        размер окна - кол-во байтов данных, кот перед без ACK
        типы подтверждений: коммулятивное и выборочное
    сохранение порядка следов сообщений - нумерация сообщений сегмент-байт

    Формат заголовка:
    +----------------------------+-------------------------+
    |порт отправителя            |порт получателя          | # порты
    +----------------------------+-------------------------+
    |порядковый номер                                      | # первый номер б
    +------------------------------------------------------+   в сегменте
    |номер подтверждения                                   | # ACK 2460 - ном
    +---------+--+---+---+---+---+---+---+---+---+---------+   ожид байта
    |длина заг|NS|CRW|ECE|URG|ACK|PSH|RST|SYN|FIN|разм окна| # flafs, окно
    +---------+--+---+---+---+---+---+---+---+---+---------+
    |контр сумма             |указатель на срочные данные  | # 
    +------------------------+-----------------------------+
    |параметры(не обяз)                                    |
    +------------------------------------------------------+
    |данные(не обяз)                                       |   
    +------------------------------------------------------+
    параметры
        Максимальный размер сегиента - MSS
        Масштаб окна до 1 Гб
        Выборочное подтвержд SACK
        временная метка

    Управление потоком
    скользящее окно(буфер) - на стор получателя - не пиним больше чем надо
    
    Перегрузка
    окно перегрузки - на стороне отправителя(не перегрузить сеть)
    размер опред автоматически
    методы определения окна: аддитивное увел мультикативное уменьш, медл старт
    сигналы о перегрузке:
        потеря сегмента
        задержка сегмента
        сигнал от маршрутизатора

Сокеты - иннтерфейсы для управлением травпортным уровнем
    Операции сокетов Беркли:
    +--------+--------------------------------+
    |Операция|Назначение                      |
    +--------+--------------------------------+
    |Socket  |создать сокет                   |
    |Bind    |связать с IP:port               |
    |Listen  |объявить о желан принимать сообщ|
    |Accept  |принять запрос на уст соед      |
    |Connect |установить соед                 |
    |Send    |отправить данные по сети        |
    |Receive |получить данные из сети         |
    |Close   |закрыть соед                    |
    +--------+--------------------------------+
    Сервер - работает(слушает) на известном IP:PORT, пассивно ждет запросов
        на соединение
    Клиент - активно устанавливает соед с сервером на задан IP:PORT
    Можно использовать TCP UDP, IPv4, IPv6.

NAT - Network Assress Translation  (трансляция сетевых адресов)
    используется для замены IP адреса в заголовке IP пакетов, чаще всего
    преобраз внутренний IP сети(частной) во внешний(интернет) с пом:
        статический NAT  - все внешние
        динамический NAT - группа внешних
        один ко многим   - все внутр адреса в 1 внешний IP

    Таблица NAT:
    +-------------+----------+------------+---------+
    |Внутр IP     |Внутр порт|Внеш IP     |внеш порт|   # порты у всех компов
    +-------------+----------+------------+---------+     разные, поэтому можно
    |192.168.0.100|50300     |85.113.51.68|49127    |     заходить на 1 сайт,
    |192.168.0.101|52101     |85.113.51.68|49128    |     ответ прид на внеш ip
    |192.168.0.102|49404     |85.113.51.68|49129    |     по таблице к нуж компу
    +-------------+----------+------------+---------+

Межсетевой экран/бранмауэр/firewall
    работает на сетевом и транспортном уровне
    Работа:
    все пакеты проходят через экран
    анализ пакетов, решает пропускать или отбрасывать согласно таблице правил
    также сверяются данные в табл соединений- предотвращ атак
    
    Другие методы огранич доступа:
    на канальном ур фильтрация по MAC адресам
    на прикладном - прокси сервер, фильтр содержимого


Прикладной уровень-------------------------------------------------------------
DNS - Domen Name System (система доменных имен)
    Доме́нное имя — символьное имя, служащее для идентификации областей, которые 
    являются единицами административной автономии в сети Интернет, в составе
    вышестоящей по иерархии такой области.
    DNS позволяет преобразовывать IP адрева в доменные(www.) и обратно
    
    утилита для просмотра IP:
    nslookup www.yandex.ru
    host
    dig
    
    Нет единого сервера
    Пространсво имен разделено нна отдельные части - домены.
    За каждый домен отвечает отд организация
    Дублирование DNS серверов.
    
    Структура доменного имени:
    www.urfu.ru.    # точка в конце - корневой домен(указывать не обязательно)
             ru     # домен верхнего уровня
        urfu        # домен второго уровня
    www             # имя компа

    Дерево доменных имен:
    зоны                  | уровни
    ----------------------+-----------
    .                     | корневой домен  
    org com net ru uk рф  | верх ур
    google yandex яндекс  | 2 ур
    www maps taxi         | компы

    Доменная зона:
    каждая зона например com содержит записи своих поддоменов

    Схема работы:
    клиент хочет узнать IP адрес дом имени maps.yandex.ru
    поиск нач с корневого домена, отправ запрос на  имя maps.yandex.ru
    корневой сервер отвечает что не знает такого адр, но знает IP сервера с
    зоной .ru. Далее клиент посылает запрос на сервер обсллуж зону .ru
    ответ такой же, адреса не знает но знает IP адр сервера зоны yandex
    в итоге последний сервер присылает успешный ответ с IP адр запраш дом им

    Режимы работы DNS
    итеративный - если сервер отвеч за дом зону - возвр ответ, если нет то
        возвращ адрес DNS-сурвера с более точной инф. (Сервера дом зон)
    рекурсивный - сам сервер вып запросы к другим серверам, ищет адрес
        самостоятельно. (Сервера разрешений имен, предоставляются провай
        дерами/организациями, или открытые как Google 8.8.8.8)

    Типы ответов DNS
    авторитетный - ответ от сервера обслуж дом зону, получен из файлов диска
    неавторитетный - получен из кэша сервера не обслуж дом зону

Протокол DNS
    модель клиент-сервер
    UDP, порт 53
    
    Формат пакета DNS
    +--------------------+--------------+ 
    |идентификатор       |флаги         | \
    +--------------------+--------------+
    |кол-во запросов     |кол-во ответов| -  Звголовок 12 байт
    +--------------------+--------------+
    |кол-во авторитет отв|кол-во доп отв| /
    +--------------------+--------------+
    |запросы DNS                        |
    +-----------------------------------+
    |ответы DNS                         |
    +-----------------------------------+
    |авторитет серверы                  |
    +-----------------------------------+
    |доп инфо                           |
    +-----------------------------------+
    
Запрос записей разных типов
    nslookup -type=A www.yandex.ru  # запрос IPv4
             -type=AAAA     # IPv6
             -type=CNAME    # псевдоним для дом имени
             -type=MX       # адр почтового сервера
             -type=SRV      # адреса и порты сетевых сервисов
             -type=NS       # адреса DNS серверов ответственных за зону
             -type=PTR      # доменное имя для IP-адреса
             -type=XXX      # запрос записей разного типа

Протокол HTTP - Hyper Transfer Protocol (Прот передачи гипертекста(HTML))
    URL - Uniform Resource Locator (уникальное положение ресурса)
    http://www.yandex.ru/images/baby
    транспортный ур: TCP 80
    режим работы HTTP: запрос-ответ
    используется в запросах и ответах обычный текстовый режим
    текущая версия прот HTTP 1.1
    
    Структура пакета HTTP
    Запрос/статус ответа
        GET /courses/networks
        200 OK
    Заголовки (не обяз)
        Host: www.yandex.ru (обязательно в HTTP 1.1)
        Content-type: text/html, charset=UTF-8
    Тело сообщения (не обяз)
        Страница HTML
        параметры введенные пользователем

    Методы HTTP:
    GET     - запрос Web-страницы
    POST    - передача данных на Web-server
    HEAD    - запрос заголовка страницы
    OUT     - помещение страницы на сервер
    DELETE  - удаление страницы с сервера
    TRACE   - трассировка страницы
    OPTIONS - запрос поддерж методов для ресурса
    CONNECT - подключ к серверу через прокси
    
    Статусы HTTP
    1XX - информация
    2XX - успшное выполнение(200 OK)
    3XX - перенаправление(301 - постоянное, 307 - временное)
    4XX - ошибка на стороне клиента(403 - доступ запрещ, 404 - стр не найдена)
    5XX - ошибка сервера(500 - внутр ошибка сервера)

    Пример запроса HTTP
    подключение по TCP к серверу www.asozykin.ru, port 80
    -----------------------------------------------------
    GET /courses/networks HTTP/1.1
    Host: www.asozykin.ru
    
    Пример ответа
    HTTP/1.1 200 OK
    Server: nginx
    Content-type: text/html, charset=UTF-8

    <html lang='en'>
    ... 
    
    Используется постоянное соединение с пом спец заголовка(автоматич в 1.1)
     Coneection: keep-alive
     автоматич закрытие соед 5-15 секунд

    Загрузка нескольких ресурсов(стили, скрипты, картинки, др зависимости)
    запрос глав страницы -- ответ
    запрс стилевого файла -- ответ

    Кэширование
    браузер сохр ресурс(картинки, скрипты, страницы,..) в кэш
    ответ содержит заголовок Last-Modified - когда было посл изменение
    далее при след обращении идет запрос GET с условием If-Modified-Since
    если ресупс был модиф - закач, если нет - берем из кэша
    Тот же способ использкется с ETag(типо хэш кода), только условие:
    If-None-Match: 3847ffbh-mnj4(ETag) - сверяется код
    


